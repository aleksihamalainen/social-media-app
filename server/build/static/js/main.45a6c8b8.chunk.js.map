{"version":3,"sources":["services/users.js","services/posts.js","components/Login.jsx","components/Register.jsx","components/Homepage.jsx","components/UserModal.jsx","components/Post.jsx","components/PostForm.jsx","components/Navbar.jsx","components/PostContainer.jsx","components/NotFound.jsx","components/Profile.jsx","App.jsx","index.jsx"],"names":["token","setToken","newToken","login","credentials","a","axios","post","response","data","register","findByUsername","username","config","headers","Authorization","get","follow","id","unfollow","delete","getAll","object","remove","like","dislike","useStyles","makeStyles","container","display","flexDirection","alignItems","marginTop","button","grid","Login","setUser","useState","setUsername","password","setPassword","visible","setVisible","history","useHistory","classes","handleLogin","event","preventDefault","userService","user","localStorage","setItem","JSON","stringify","postService","push","setTimeout","Container","maxWidth","Snackbar","open","anchorOrigin","horizontal","vertical","Alert","severity","variant","CssBaseline","className","Typography","component","form","onSubmit","TextField","onChange","target","value","label","margin","fullWidth","required","type","Button","color","Grid","item","Link","href","Register","confirm","setConfirm","message","setMessage","handleRegister","height","backgroundColor","elementContainer","buttonContainer","marginBottom","marginRight","marginLeft","title","Homepage","onClick","xmlns","viewBox","image","fill","fillOpacity","d","UserModal","users","Dialog","onClose","map","align","key","padding","border","usernameLink","fontWeight","upper","justifyContent","imageContainer","maxHeight","likeContainer","heart","Post","posts","setPosts","currentUser","parse","getItem","likerIds","likers","liker","_id","setOpen","likes","setLikes","setLikers","includes","setLike","followers","following","setFollowing","DialogTitle","DialogActions","filter","p","src","alt","width","IconButton","concat","content","input","PostForm","setContent","file","setFile","error","setError","notification","setNotification","handleClose","setErrorMessage","files","multiline","formData","FormData","append","then","reverse","e","navbar","postButton","propTypes","PropTypes","array","func","Navbar","anchorEl","setAnchorEl","Boolean","AppBar","position","Toolbar","currentTarget","Menu","getContentAnchorEl","transformOrigin","MenuItem","clear","window","location","reload","PostContainer","useEffect","result","NotFound","info","borderBottom","followRow","titleRow","images","opacity","Profile","loaded","setLoaded","followerCount","setFollowerCount","followingCount","setFollowingCount","followersUsers","setFollowersUsers","visibleFollowing","setVisibleFollowing","visibleFollowers","setVisibleFollowers","name","useParams","length","userIds","usernames","url","App","loggedUser","parsedUser","path","to","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.45a6c8b8.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = '/api/users';\n\nlet token = null;\n\nconst setToken = (newToken) => {\n  token = `Bearer ${newToken}`;\n};\n\nconst login = async (credentials) => {\n  const response = await axios.post('/api/login', credentials);\n  return response.data;\n};\n\nconst register = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nconst findByUsername = async (username) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.get(`${baseUrl}/${username}`, config);\n  return response.data;\n};\n\nconst follow = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.post(`${baseUrl}/${id}/followers`, {}, config);\n  return response.data;\n};\n\nconst unfollow = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.delete(`${baseUrl}/${id}/followers`, config);\n  return response.data;\n};\n\nexport default { setToken, login, register, findByUsername, follow, unfollow };\n","import axios from 'axios';\n\nconst baseUrl = '/api/posts';\n\nlet token = null;\n\nconst setToken = (newToken) => {\n  token = `Bearer ${newToken}`;\n};\n\nconst getAll = async () => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.get(baseUrl, config);\n  return response.data;\n};\n\nconst post = async (object) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.post(baseUrl, object, config);\n  return response.data;\n};\n\nconst remove = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\n  return response.data;\n};\n\nconst like = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.post(`${baseUrl}/${id}/likes`, {}, config);\n  return response.data;\n};\n\nconst dislike = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.delete(`${baseUrl}/${id}/likes`, config);\n  return response.data;\n};\n\nexport default { setToken, getAll, post, remove, like, dislike };\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport {\n  makeStyles,\n  TextField,\n  Typography,\n  CssBaseline,\n  Button,\n  Container,\n  Grid,\n  Link,\n  Snackbar,\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport userService from '../services/users';\nimport postService from '../services/posts';\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: '8em',\n  },\n  button: {\n    marginTop: '1em',\n  },\n  grid: {\n    marginTop: '1em',\n  },\n});\n\nconst Login = ({ setUser }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [visible, setVisible] = useState(false);\n\n  const history = useHistory();\n  const classes = useStyles();\n\n  const handleLogin = async (event) => {\n    try {\n      event.preventDefault();\n      const user = await userService.login({ username, password });\n      localStorage.setItem('user', JSON.stringify(user));\n      postService.setToken(user.token);\n      userService.setToken(user.token);\n      setUsername('');\n      setPassword('');\n      setUser(user);\n      history.push('/');\n    } catch (error) {\n      setVisible(true);\n      setTimeout(() => {\n        setVisible(false);\n      }, 3000);\n    }\n  };\n\n  return (\n    <Container maxWidth='xs'>\n      <Snackbar\n        open={visible}\n        anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\n      >\n        <Alert severity='error' variant='filled'>\n          Invalid username or password\n        </Alert>\n      </Snackbar>\n      <CssBaseline />\n      <div className={classes.container}>\n        <Typography component='h1' variant='h4'>\n          Log in\n        </Typography>\n        <form className={classes.form} onSubmit={handleLogin}>\n          <TextField\n            onChange={({ target }) => setUsername(target.value)}\n            label='Username'\n            variant='outlined'\n            margin='normal'\n            fullWidth\n            required\n          />\n          <TextField\n            onChange={({ target }) => setPassword(target.value)}\n            label='Password'\n            variant='outlined'\n            type='password'\n            margin='normal'\n            fullWidth\n            required\n          />\n          <Button\n            type='submit'\n            color='primary'\n            fullWidth\n            variant='contained'\n            className={classes.button}\n          >\n            Log in\n          </Button>\n          <Grid container className={classes.grid}>\n            <Grid item>\n              <Link href='/register'>Don&apos;t have an account? Register</Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nLogin.propTypes = {\n  setUser: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  makeStyles,\n  Container,\n  CssBaseline,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n  Link,\n  Snackbar,\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport userService from '../services/users';\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: '8em',\n  },\n  button: {\n    marginTop: '1em',\n  },\n  grid: {\n    marginTop: '1em',\n  },\n});\n\nconst Register = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirm, setConfirm] = useState('');\n  const [visible, setVisible] = useState(false);\n  const [message, setMessage] = useState('');\n\n  const history = useHistory();\n  const classes = useStyles();\n\n  const handleRegister = async (event) => {\n    try {\n      event.preventDefault();\n      if (password === confirm) {\n        await userService.register({ username, password });\n        setUsername('');\n        setPassword('');\n        setConfirm('');\n        history.push('/login');\n      } else {\n        setVisible(true);\n        setMessage('Passwords must match');\n        setTimeout(() => {\n          setVisible(false);\n        }, 3000);\n      }\n    } catch (error) {\n      setVisible(true);\n      setMessage('This username is already taken');\n      setTimeout(() => {\n        setVisible(false);\n      }, 3000);\n    }\n  };\n\n  return (\n    <Container maxWidth='xs'>\n      <Snackbar\n        open={visible}\n        anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\n      >\n        <Alert severity='error' variant='filled'>\n          {message}\n        </Alert>\n      </Snackbar>\n      <CssBaseline />\n      <div className={classes.container}>\n        <Typography component='h1' variant='h4'>\n          Register\n        </Typography>\n        <form onSubmit={handleRegister}>\n          <TextField\n            onChange={({ target }) => setUsername(target.value)}\n            label='Username'\n            variant='outlined'\n            margin='normal'\n            fullWidth\n            required\n          />\n          <TextField\n            onChange={({ target }) => setPassword(target.value)}\n            label='Password'\n            variant='outlined'\n            type='password'\n            margin='normal'\n            fullWidth\n            required\n          />\n          <TextField\n            onChange={({ target }) => setConfirm(target.value)}\n            label='Confirm password'\n            variant='outlined'\n            type='password'\n            margin='normal'\n            fullWidth\n            required\n          />\n          <Button\n            type='submit'\n            color='primary'\n            fullWidth\n            variant='contained'\n            className={classes.button}\n          >\n            Register\n          </Button>\n          <Grid container className={classes.grid}>\n            <Grid item>\n              <Link href='/login'>Already have an account? Log in</Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nexport default Register;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles, CssBaseline, Typography, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  container: {\n    height: '100vh',\n    backgroundColor: '#3f51b5',\n  },\n  elementContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: 'white',\n  },\n  buttonContainer: {\n    marginTop: '3em',\n    marginBottom: '5em',\n  },\n  login: {\n    marginRight: '1em',\n  },\n  register: {\n    marginLeft: '1em',\n  },\n  title: {\n    marginTop: '2em',\n  },\n});\n\nconst Homepage = () => {\n  const history = useHistory();\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.elementContainer}>\n        <CssBaseline />\n        <Typography component='h1' variant='h2' className={classes.title}>\n          Homepage\n        </Typography>\n        <div className={classes.buttonContainer}>\n          <Button\n            color='primary'\n            variant='contained'\n            onClick={() => history.push('/login')}\n            className={classes.login}\n          >\n            Log in\n          </Button>\n          <Button\n            variant='contained'\n            onClick={() => history.push('/register')}\n            className={classes.register}\n          >\n            Register\n          </Button>\n        </div>\n        <svg\n          xmlns='http://www.w3.org/2000/svg'\n          viewBox='0 0 1440 320'\n          className={classes.image}\n        >\n          <path\n            fill='#3f51b5'\n            fillOpacity='1'\n            d='M0,256L48,229.3C96,203,192,149,288,154.7C384,160,480,224,576,218.7C672,213,768,139,864,128C960,117,1056,171,1152,197.3C1248,224,1344,224,1392,224L1440,224L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z'\n          />\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default Homepage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  CssBaseline,\n  Container,\n  Dialog,\n  Link,\n  Typography,\n} from '@material-ui/core';\n\nconst UserModal = ({ visible, setVisible, users }) => {\n  const handleClose = () => {\n    setVisible(false);\n  };\n\n  return (\n    <Container>\n      <CssBaseline />\n      <Dialog open={visible} onClose={handleClose} fullWidth>\n        {users.map((user) => {\n          return (\n            <Typography align='center' variant='h6' key={user}>\n              <Link href={`/users/${user}`} color='inherit'>\n                {user}\n              </Link>\n            </Typography>\n          );\n        })}\n      </Dialog>\n    </Container>\n  );\n};\n\nUserModal.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  setVisible: PropTypes.func.isRequired,\n  users: PropTypes.array.isRequired,\n};\n\nexport default UserModal;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  makeStyles,\n  Container,\n  CssBaseline,\n  Typography,\n  Link,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  IconButton,\n} from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport UserModal from './UserModal';\nimport postService from '../services/posts';\nimport userService from '../services/users';\n\nconst useStyles = makeStyles({\n  container: {\n    marginTop: '2em',\n    padding: '1em',\n    border: 'solid black',\n  },\n  usernameLink: {\n    fontWeight: 'bold',\n  },\n  upper: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  imageContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  image: {\n    margin: '1em 0',\n    maxHeight: '600px',\n    maxWidth: '600px',\n  },\n  likeContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n  },\n  heart: {\n    padding: '0',\n  },\n});\n\nconst Post = ({ post, posts, setPosts }) => {\n  const currentUser = JSON.parse(localStorage.getItem('user'));\n  const likerIds = post.likers.map((liker) => liker._id);\n\n  const [open, setOpen] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [likes, setLikes] = useState(post.likes);\n  const [likers, setLikers] = useState(\n    post.likers.map((liker) => liker.username)\n  );\n  const [like, setLike] = useState(likerIds.includes(currentUser.id));\n  const [following, setFollowing] = useState(\n    post.user.followers.includes(currentUser.id)\n  );\n\n  const classes = useStyles();\n\n  const handleDelete = () => {\n    postService.remove(post._id);\n    setPosts(posts.filter((p) => p !== post));\n    setOpen(false);\n  };\n\n  const handleLike = () => {\n    postService.like(post._id);\n    setLike(true);\n    setLikes(likes + 1);\n    setLikers(likers.concat(currentUser.username));\n  };\n\n  const handleDislike = () => {\n    postService.dislike(post._id);\n    setLike(false);\n    setLikes(likes - 1);\n    setLikers(likers.filter((liker) => liker !== currentUser.username));\n  };\n\n  const handleFollow = () => {\n    userService.follow(post.user._id);\n    setFollowing(true);\n  };\n\n  const handleUnfollow = () => {\n    userService.unfollow(post.user._id);\n    setFollowing(false);\n  };\n\n  return (\n    <Container maxWidth='md' className={classes.container}>\n      <CssBaseline />\n      <UserModal visible={visible} setVisible={setVisible} users={likers} />\n      <Typography component='div' className={classes.upper}>\n        <Typography component='h1' variant='h6'>\n          <Link href={`/users/${post.user.username}`} color='inherit'>\n            {post.user.username}\n          </Link>\n        </Typography>\n        {post.user.username === currentUser.username ? (\n          <Button\n            variant='contained'\n            color='secondary'\n            onClick={() => setOpen(true)}\n          >\n            Delete\n          </Button>\n        ) : following ? (\n          <Button variant='contained' color='default' onClick={handleUnfollow}>\n            Unfollow\n          </Button>\n        ) : (\n          <Button variant='contained' color='primary' onClick={handleFollow}>\n            Follow\n          </Button>\n        )}\n        <Dialog open={open} onClose={() => setOpen(false)}>\n          <DialogTitle>Are you sure you want to delete this post?</DialogTitle>\n          <DialogActions>\n            <Button variant='contained' onClick={() => setOpen(false)}>\n              Cancel\n            </Button>\n            <Button\n              variant='contained'\n              color='secondary'\n              onClick={handleDelete}\n            >\n              Delete\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Typography>\n      <Typography component='div' className={classes.imageContainer}>\n        <img\n          src={post.image}\n          alt='Post'\n          width='100%'\n          height='100%'\n          className={classes.image}\n        />\n      </Typography>\n      <Typography component='div' className={classes.likeContainer}>\n        {like ? (\n          <IconButton className={classes.heart} onClick={handleDislike}>\n            <FavoriteIcon color='secondary' />\n          </IconButton>\n        ) : (\n          <IconButton className={classes.heart} onClick={handleLike}>\n            <FavoriteBorderIcon color='secondary' />\n          </IconButton>\n        )}\n        <Link color='inherit' href='#' onClick={() => setVisible(true)}>\n          {likes}\n          &nbsp;likes\n        </Link>\n      </Typography>\n      <Typography component='div' variant='body2'>\n        <Link\n          href={`/users/${post.user.username}`}\n          color='inherit'\n          className={classes.usernameLink}\n        >\n          {post.user.username}\n        </Link>\n        &nbsp;\n        {post.content}\n      </Typography>\n    </Container>\n  );\n};\n\nPost.propTypes = {\n  post: PropTypes.instanceOf(Object).isRequired,\n  posts: PropTypes.array.isRequired,\n  setPosts: PropTypes.func.isRequired,\n};\n\nexport default Post;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  makeStyles,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  Button,\n  TextField,\n  Container,\n  CssBaseline,\n  Snackbar,\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport postService from '../services/posts';\n\nconst useStyles = makeStyles({\n  content: {\n    margin: '1em',\n  },\n  input: {\n    margin: '1em',\n  },\n});\n\nconst PostForm = ({ visible, setVisible, posts, setPosts }) => {\n  const [content, setContent] = useState('');\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(false);\n  const [notification, setNotification] = useState(false);\n\n  const classes = useStyles();\n\n  const handleClose = () => {\n    setVisible(false);\n  };\n\n  const setErrorMessage = () => {\n    setError(true);\n    setTimeout(() => {\n      setError(false);\n    }, 3000);\n  };\n\n  const setNotificationMessage = () => {\n    setNotification(true);\n    setTimeout(() => {\n      setNotification(false);\n    }, 3000);\n  };\n\n  const addPost = () => {\n    try {\n      if (content !== '' && file !== null) {\n        const formData = new FormData();\n        formData.append('content', content);\n        formData.append('postImage', file);\n        postService.post(formData).then((response) => {\n          setPosts(posts.concat(response).reverse());\n        });\n        setNotificationMessage();\n        setContent('');\n        setVisible(false);\n      } else {\n        setErrorMessage();\n      }\n    } catch (e) {\n      setErrorMessage();\n    }\n  };\n\n  return (\n    <Container>\n      <Snackbar\n        open={notification}\n        anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\n      >\n        <Alert severity='success' variant='filled'>\n          Post added successfully\n        </Alert>\n      </Snackbar>\n      <CssBaseline />\n      <Dialog open={visible} onClose={handleClose} fullWidth>\n        <Snackbar\n          open={error}\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\n        >\n          <Alert severity='error' variant='filled'>\n            Content or image missing\n          </Alert>\n        </Snackbar>\n        <DialogTitle>Add a new post</DialogTitle>\n        <input\n          className={classes.input}\n          type='file'\n          onChange={({ target }) => setFile(target.files[0])}\n        />\n        <TextField\n          label='Content'\n          variant='outlined'\n          required\n          multiline\n          onChange={({ target }) => setContent(target.value)}\n          className={classes.content}\n        />\n        <DialogActions>\n          <Button variant='contained' onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button variant='contained' color='primary' onClick={addPost}>\n            Add post\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n};\n\nPostForm.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  setVisible: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired,\n  setPosts: PropTypes.func.isRequired,\n};\n\nexport default PostForm;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport {\n  makeStyles,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Menu,\n  MenuItem,\n  Button,\n  Typography,\n} from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport PostForm from './PostForm';\n\nconst useStyles = makeStyles({\n  navbar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  postButton: {\n    marginLeft: '5em',\n  },\n});\n\nconst Navbar = ({ posts, setPosts }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [visible, setVisible] = useState(false);\n\n  const open = Boolean(anchorEl);\n\n  const history = useHistory();\n  const classes = useStyles();\n\n  const currentUser = JSON.parse(localStorage.getItem('user'));\n\n  const logOut = () => {\n    localStorage.clear();\n    setAnchorEl(null);\n    history.push('/');\n    window.location.reload();\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  return (\n    <AppBar position='sticky'>\n      <Toolbar className={classes.navbar}>\n        <Typography component='div'>\n          <IconButton color='inherit' onClick={() => history.push('/')}>\n            <HomeIcon />\n          </IconButton>\n          <Button\n            className={classes.postButton}\n            onClick={() => setVisible(true)}\n            variant='contained'\n          >\n            New post\n          </Button>\n          <PostForm\n            visible={visible}\n            setVisible={setVisible}\n            posts={posts}\n            setPosts={setPosts}\n          />\n        </Typography>\n        <IconButton color='inherit' onClick={handleMenu}>\n          <AccountCircle />\n        </IconButton>\n        <Menu\n          anchorEl={anchorEl}\n          onClose={() => setAnchorEl(null)}\n          open={open}\n          getContentAnchorEl={null}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          <MenuItem\n            onClick={() => {\n              history.push(`/users/${currentUser.username}`);\n              setAnchorEl(null);\n            }}\n          >\n            My profile\n          </MenuItem>\n          <MenuItem onClick={logOut}>Log out</MenuItem>\n        </Menu>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nPostForm.propTypes = {\n  posts: PropTypes.array,\n  setPosts: PropTypes.func,\n};\n\nexport default Navbar;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles, Container, CssBaseline } from '@material-ui/core';\nimport Post from './Post';\nimport Navbar from './Navbar';\nimport postService from '../services/posts';\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n});\n\nconst PostContainer = () => {\n  const [posts, setPosts] = useState([]);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    postService.getAll().then((result) => setPosts(result.reverse()));\n  }, []);\n\n  return (\n    <div>\n      <Navbar posts={posts} setPosts={setPosts} />\n      <Container maxWidth='md' className={classes.container}>\n        <CssBaseline />\n        {posts.map((post) => {\n          return (\n            <Post\n              key={post._id}\n              post={post}\n              posts={posts}\n              setPosts={setPosts}\n            />\n          );\n        })}\n      </Container>\n    </div>\n  );\n};\n\nexport default PostContainer;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles, CssBaseline, Typography, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  container: {\n    height: '100vh',\n    backgroundColor: '#3f51b5',\n  },\n  elementContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: 'white',\n  },\n  buttonContainer: {\n    marginTop: '3em',\n    marginBottom: '5em',\n  },\n  login: {\n    marginRight: '1em',\n  },\n  register: {\n    marginLeft: '1em',\n  },\n  title: {\n    marginTop: '2em',\n  },\n});\n\nconst NotFound = () => {\n  const history = useHistory();\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.elementContainer}>\n        <CssBaseline />\n        <Typography component='h1' variant='h2' className={classes.title}>\n          Page not found\n        </Typography>\n        <div className={classes.buttonContainer}>\n          <Button\n            color='primary'\n            variant='contained'\n            onClick={() => history.push('/')}\n            className={classes.login}\n          >\n            Return home\n          </Button>\n        </div>\n        <svg\n          xmlns='http://www.w3.org/2000/svg'\n          viewBox='0 0 1440 320'\n          className={classes.image}\n        >\n          <path\n            fill='#3f51b5'\n            fillOpacity='1'\n            d='M0,256L48,229.3C96,203,192,149,288,154.7C384,160,480,224,576,218.7C672,213,768,139,864,128C960,117,1056,171,1152,197.3C1248,224,1344,224,1392,224L1440,224L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z'\n          />\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport {\n  makeStyles,\n  CssBaseline,\n  Container,\n  Link,\n  Typography,\n  Button,\n} from '@material-ui/core';\nimport Navbar from './Navbar';\nimport NotFound from './NotFound';\nimport UserModal from './UserModal';\nimport userService from '../services/users';\n\nconst useStyles = makeStyles({\n  info: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    borderBottom: 'solid black',\n  },\n  followRow: {\n    marginBottom: '1em',\n    display: 'flex',\n  },\n  titleRow: {\n    display: 'flex',\n    margin: '1em 0',\n  },\n  images: {\n    marginTop: '1em',\n  },\n  username: {\n    marginRight: '0.5em',\n  },\n  button: {\n    marginLeft: '0.5em',\n  },\n  following: {\n    marginLeft: '0.5em',\n  },\n  followers: {\n    margin: '0 0.5em',\n  },\n  posts: {\n    marginRight: '0.5em',\n  },\n  image: {\n    maxWidth: '225px',\n    maxHeight: '225px',\n    margin: '0.1em',\n    '&:hover': {\n      opacity: '0.8',\n    },\n  },\n});\n\nconst Profile = () => {\n  const [user, setUser] = useState(null);\n  const [loaded, setLoaded] = useState(false);\n  const [followerCount, setFollowerCount] = useState(0);\n  const [followingCount, setFollowingCount] = useState(0);\n  const [following, setFollowing] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [followersUsers, setFollowersUsers] = useState([]);\n  const [visibleFollowing, setVisibleFollowing] = useState(false);\n  const [visibleFollowers, setVisibleFollowers] = useState(false);\n\n  const classes = useStyles();\n  const history = useHistory();\n\n  const name = useParams().username;\n  const currentUser = JSON.parse(localStorage.getItem('user'));\n\n  if (currentUser) {\n    userService.setToken(currentUser.token);\n  } else {\n    history.push('/login');\n  }\n\n  useEffect(() => {\n    userService.findByUsername(name).then((response) => {\n      setUser(response);\n      setFollowerCount(response.followers.length);\n      setFollowingCount(response.following.length);\n      setPosts(response.posts);\n    });\n  }, [name]);\n\n  useEffect(() => {\n    if (user) {\n      const userIds = user.followers.map((user) => user._id);\n      setFollowing(\n        userIds.includes(JSON.parse(localStorage.getItem('user')).id)\n      );\n      const usernames = user.followers.map((user) => user.username);\n      setFollowersUsers(usernames);\n    }\n  }, [user]);\n\n  setTimeout(() => {\n    setLoaded(true);\n  }, 500);\n\n  const handleFollow = () => {\n    userService.follow(user._id);\n    setFollowing(true);\n    setFollowerCount(followerCount + 1);\n    setFollowersUsers(followersUsers.concat(currentUser.username));\n  };\n\n  const handleUnfollow = () => {\n    userService.unfollow(user._id);\n    setFollowing(false);\n    setFollowerCount(followerCount - 1);\n    setFollowersUsers(\n      followersUsers.filter((user) => user !== currentUser.username)\n    );\n  };\n\n  if (!user && loaded === true) {\n    return <NotFound />;\n  }\n\n  return (\n    <div>\n      <Navbar posts={posts} setPosts={setPosts} />\n      <CssBaseline />\n      {user ? (\n        <Container maxWidth='md'>\n          <UserModal\n            visible={visibleFollowing}\n            setVisible={setVisibleFollowing}\n            users={user.following.map((following) => following.username)}\n          />\n          <UserModal\n            visible={visibleFollowers}\n            setVisible={setVisibleFollowers}\n            users={followersUsers}\n          />\n          <div className={classes.info}>\n            <div className={classes.titleRow}>\n              <Typography\n                component='h1'\n                variant='h5'\n                className={classes.username}\n              >\n                {user.username}\n              </Typography>\n              {user.username !== currentUser.username ? (\n                <div className={classes.button}>\n                  {following ? (\n                    <Button\n                      variant='contained'\n                      color='default'\n                      onClick={handleUnfollow}\n                    >\n                      Unfollow\n                    </Button>\n                  ) : (\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      onClick={handleFollow}\n                    >\n                      Follow\n                    </Button>\n                  )}\n                </div>\n              ) : null}\n            </div>\n            <Typography component='div' variant='body1'>\n              <div className={classes.followRow}>\n                <div className={classes.posts}>\n                  {posts.length}\n                  &nbsp; posts\n                </div>\n                <Link\n                  color='inherit'\n                  className={classes.followers}\n                  href='#'\n                  onClick={() => setVisibleFollowers(true)}\n                >\n                  {followerCount}\n                  &nbsp; followers\n                </Link>\n                <Link\n                  color='inherit'\n                  className={classes.following}\n                  href='#'\n                  onClick={() => setVisibleFollowing(true)}\n                >\n                  {followingCount}\n                  &nbsp; following\n                </Link>\n              </div>\n            </Typography>\n          </div>\n          <div className={classes.images}>\n            {posts.map((post) => {\n              if (post.user === user._id || post.user._id === user._id) {\n                const url = '/'.concat(post.image);\n                return (\n                  <Link href={`/posts/${post._id}`}>\n                    <img\n                      src={url}\n                      alt='Post'\n                      key={post._id}\n                      className={classes.image}\n                      width='25%'\n                      height='25%'\n                    />\n                  </Link>\n                );\n              } else {\n                return null;\n              }\n            })}\n          </div>\n        </Container>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Homepage from './components/Homepage';\nimport PostContainer from './components/PostContainer';\nimport Profile from './components/Profile';\nimport NotFound from './components/NotFound';\nimport postService from './services/posts';\nimport userService from './services/users';\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const loggedUser = localStorage.getItem('user');\n    if (loggedUser) {\n      const parsedUser = JSON.parse(loggedUser);\n      setUser(parsedUser);\n      postService.setToken(parsedUser.token);\n      userService.setToken(parsedUser.token);\n    }\n  }, []);\n\n  return (\n    <Router>\n      <Switch>\n        <Route path='/login'>\n          {user ? <Redirect to='/' /> : <Login setUser={setUser} />}\n        </Route>\n        <Route path='/register'>\n          {user ? <Redirect to='/' /> : <Register />}\n        </Route>\n        <Route path='/users/:username'>\n          <Profile />\n        </Route>\n        <Route exact path='/'>\n          {user ? <PostContainer /> : <Homepage />}\n        </Route>\n        <Route path='*' component={NotFound} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}