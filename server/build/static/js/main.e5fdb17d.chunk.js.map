{"version":3,"sources":["services/users.js","services/posts.js","components/Login.jsx","components/Register.jsx","components/Homepage.jsx","components/Post.jsx","components/PostContainer.jsx","components/Profile.jsx","components/PostForm.jsx","components/Navbar.jsx","App.jsx","index.jsx"],"names":["login","credentials","a","axios","post","response","data","register","findByUsername","username","get","token","setToken","newToken","getAll","object","config","headers","Authorization","remove","id","delete","useStyles","makeStyles","container","display","flexDirection","alignItems","marginTop","button","grid","Login","setUser","useState","setUsername","password","setPassword","visible","setVisible","history","useHistory","classes","handleLogin","event","preventDefault","userService","user","localStorage","setItem","JSON","stringify","postService","push","setTimeout","Container","maxWidth","Snackbar","open","anchorOrigin","horizontal","vertical","Alert","severity","variant","CssBaseline","className","Typography","component","form","onSubmit","TextField","onChange","target","value","label","margin","fullWidth","required","type","Button","color","Grid","item","Link","href","Register","confirm","setConfirm","message","setMessage","handleRegister","height","backgroundColor","elementContainer","buttonContainer","marginBottom","marginRight","marginLeft","title","Homepage","onClick","xmlns","viewBox","image","fill","fillOpacity","d","padding","border","usernameLink","fontWeight","upper","justifyContent","likeContainer","heart","Post","posts","setPosts","setOpen","currentUser","parse","getItem","Dialog","onClose","DialogTitle","DialogActions","_id","filter","p","src","alt","width","IconButton","likes","content","date","PostContainer","useEffect","then","result","reverse","map","key","info","borderBottom","followRow","titleRow","images","following","followers","Profile","name","useParams","length","input","PostForm","setContent","file","setFile","error","setError","notification","setNotification","handleClose","setErrorMessage","files","multiline","formData","FormData","append","e","navbar","postButton","Navbar","anchorEl","setAnchorEl","Boolean","AppBar","position","Toolbar","currentTarget","Menu","getContentAnchorEl","transformOrigin","MenuItem","clear","window","location","reload","App","loggedUser","parsedUser","path","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5fdb17d.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = '/api/users';\n\nconst login = async (credentials) => {\n  const response = await axios.post('/api/login', credentials);\n  return response.data;\n};\n\nconst register = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nconst findByUsername = async (username) => {\n  const response = await axios.get(`${baseUrl}/${username}`);\n  return response.data;\n};\n\nexport default { login, register, findByUsername };\n","import axios from 'axios';\n\nconst baseUrl = '/api/posts';\n\nlet token = null;\n\nconst setToken = (newToken) => {\n  token = `Bearer ${newToken}`;\n};\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst post = async (object) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.post(baseUrl, object, config);\n  return response.data;\n};\n\nconst remove = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\n  return response.data;\n};\n\nexport default { setToken, getAll, post, remove };\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport {\n  makeStyles,\n  TextField,\n  Typography,\n  CssBaseline,\n  Button,\n  Container,\n  Grid,\n  Link,\n  Snackbar,\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport userService from '../services/users';\nimport postService from '../services/posts';\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: '8em',\n  },\n  button: {\n    marginTop: '1em',\n  },\n  grid: {\n    marginTop: '1em',\n  },\n});\n\nconst Login = ({ setUser }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [visible, setVisible] = useState(false);\n\n  const history = useHistory();\n  const classes = useStyles();\n\n  const handleLogin = async (event) => {\n    try {\n      event.preventDefault();\n      const user = await userService.login({ username, password });\n      localStorage.setItem('user', JSON.stringify(user));\n      setUsername('');\n      setPassword('');\n      setUser(user);\n      postService.setToken(user.token);\n      history.push('/');\n    } catch (error) {\n      setVisible(true);\n      setTimeout(() => {\n        setVisible(false);\n      }, 3000);\n    }\n  };\n\n  return (\n    <Container maxWidth='xs'>\n      <Snackbar\n        open={visible}\n        anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\n      >\n        <Alert severity='error' variant='filled'>\n          Invalid username or password\n        </Alert>\n      </Snackbar>\n      <CssBaseline />\n      <div className={classes.container}>\n        <Typography component='h1' variant='h4'>\n          Log in\n        </Typography>\n        <form className={classes.form} onSubmit={handleLogin}>\n          <TextField\n            onChange={({ target }) => setUsername(target.value)}\n            label='Username'\n            variant='outlined'\n            margin='normal'\n            fullWidth\n            required\n          />\n          <TextField\n            onChange={({ target }) => setPassword(target.value)}\n            label='Password'\n            variant='outlined'\n            type='password'\n            margin='normal'\n            fullWidth\n            required\n          />\n          <Button\n            type='submit'\n            color='primary'\n            fullWidth\n            variant='contained'\n            className={classes.button}\n          >\n            Log in\n          </Button>\n          <Grid container className={classes.grid}>\n            <Grid item>\n              <Link href='/register'>Don&apos;t have an account? Register</Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nLogin.propTypes = {\n  setUser: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  makeStyles,\n  Container,\n  CssBaseline,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n  Link,\n  Snackbar,\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport userService from '../services/users';\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: '8em',\n  },\n  button: {\n    marginTop: '1em',\n  },\n  grid: {\n    marginTop: '1em',\n  },\n});\n\nconst Register = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirm, setConfirm] = useState('');\n  const [visible, setVisible] = useState(false);\n  const [message, setMessage] = useState('');\n\n  const history = useHistory();\n  const classes = useStyles();\n\n  const handleRegister = async (event) => {\n    try {\n      event.preventDefault();\n      if (password === confirm) {\n        await userService.register({ username, password });\n        setUsername('');\n        setPassword('');\n        setConfirm('');\n        history.push('/login');\n      } else {\n        setVisible(true);\n        setMessage('Passwords must match');\n        setTimeout(() => {\n          setVisible(false);\n        }, 3000);\n      }\n    } catch (error) {\n      setVisible(true);\n      setMessage('This username is already taken');\n      setTimeout(() => {\n        setVisible(false);\n      }, 3000);\n    }\n  };\n\n  return (\n    <Container maxWidth='xs'>\n      <Snackbar\n        open={visible}\n        anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\n      >\n        <Alert severity='error' variant='filled'>\n          {message}\n        </Alert>\n      </Snackbar>\n      <CssBaseline />\n      <div className={classes.container}>\n        <Typography component='h1' variant='h4'>\n          Register\n        </Typography>\n        <form onSubmit={handleRegister}>\n          <TextField\n            onChange={({ target }) => setUsername(target.value)}\n            label='Username'\n            variant='outlined'\n            margin='normal'\n            fullWidth\n            required\n          />\n          <TextField\n            onChange={({ target }) => setPassword(target.value)}\n            label='Password'\n            variant='outlined'\n            type='password'\n            margin='normal'\n            fullWidth\n            required\n          />\n          <TextField\n            onChange={({ target }) => setConfirm(target.value)}\n            label='Confirm password'\n            variant='outlined'\n            type='password'\n            margin='normal'\n            fullWidth\n            required\n          />\n          <Button\n            type='submit'\n            color='primary'\n            fullWidth\n            variant='contained'\n            className={classes.button}\n          >\n            Register\n          </Button>\n          <Grid container className={classes.grid}>\n            <Grid item>\n              <Link href='/login'>Already have an account? Log in</Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nexport default Register;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles, CssBaseline, Typography, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  container: {\n    height: '100vh',\n    backgroundColor: '#3f51b5',\n  },\n  elementContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: 'white',\n  },\n  buttonContainer: {\n    marginTop: '3em',\n    marginBottom: '5em',\n  },\n  login: {\n    marginRight: '1em',\n  },\n  register: {\n    marginLeft: '1em',\n  },\n  title: {\n    marginTop: '2em',\n  },\n});\n\nconst Homepage = () => {\n  const history = useHistory();\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.elementContainer}>\n        <CssBaseline />\n        <Typography component='h1' variant='h2' className={classes.title}>\n          Homepage\n        </Typography>\n        <div className={classes.buttonContainer}>\n          <Button\n            color='primary'\n            variant='contained'\n            onClick={() => history.push('/login')}\n            className={classes.login}\n          >\n            Log in\n          </Button>\n          <Button\n            variant='contained'\n            onClick={() => history.push('/register')}\n            className={classes.register}\n          >\n            Register\n          </Button>\n        </div>\n        <svg\n          xmlns='http://www.w3.org/2000/svg'\n          viewBox='0 0 1440 320'\n          className={classes.image}\n        >\n          <path\n            fill='#3f51b5'\n            fillOpacity='1'\n            d='M0,256L48,229.3C96,203,192,149,288,154.7C384,160,480,224,576,218.7C672,213,768,139,864,128C960,117,1056,171,1152,197.3C1248,224,1344,224,1392,224L1440,224L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z'\n          />\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default Homepage;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  makeStyles,\n  Container,\n  CssBaseline,\n  Typography,\n  Link,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  IconButton,\n} from '@material-ui/core';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport postService from '../services/posts';\n\nconst useStyles = makeStyles({\n  container: {\n    marginTop: '2em',\n    padding: '1em',\n    border: 'solid black',\n  },\n  usernameLink: {\n    fontWeight: 'bold',\n  },\n  upper: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  image: {\n    margin: '1em 0',\n  },\n  likeContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n  },\n  heart: {\n    padding: '0',\n  },\n});\n\nconst Post = ({ post, posts, setPosts }) => {\n  const [open, setOpen] = useState(false);\n\n  const classes = useStyles();\n\n  const currentUser = JSON.parse(localStorage.getItem('user'));\n\n  const handleDelete = () => {\n    postService.remove(post._id);\n    setPosts(posts.filter(p => p !== post))\n    setOpen(false);\n  };\n\n  return (\n    <Container maxWidth='md' className={classes.container}>\n      <CssBaseline />\n      <div className={classes.upper}>\n        <Typography component='h1' variant='h6'>\n          <Link href={`/${post.user.username}`} color='inherit'>\n            {post.user.username}\n          </Link>\n        </Typography>\n        {post.user.username === currentUser.username ? (\n          <Button\n            variant='contained'\n            color='secondary'\n            onClick={() => setOpen(true)}\n          >\n            Delete\n          </Button>\n        ) : null}\n        <Dialog open={open} onClose={() => setOpen(false)}>\n          <DialogTitle>Are you sure you want to delete this post?</DialogTitle>\n          <DialogActions>\n            <Button variant='contained' onClick={() => setOpen(false)}>\n              Cancel\n            </Button>\n            <Button\n              variant='contained'\n              color='secondary'\n              onClick={handleDelete}\n            >\n              Delete\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n      <img\n        src={post.image}\n        alt='Post'\n        width='100%'\n        height='100%'\n        className={classes.image}\n      />\n      <Typography component='div' className={classes.likeContainer}>\n        <IconButton className={classes.heart}>\n          <FavoriteBorderIcon />\n        </IconButton>\n        <div>\n          {post.likes}\n          &nbsp;likes\n        </div>\n      </Typography>\n      <Typography component='div' variant='body2'>\n        <Link\n          href={`/${post.user.username}`}\n          color='inherit'\n          className={classes.usernameLink}\n        >\n          {post.user.username}\n        </Link>\n        &nbsp;\n        {post.content}\n      </Typography>\n      <Typography component='div' variant='body2'>\n        Posted &nbsp;\n        {post.date}\n      </Typography>\n    </Container>\n  );\n};\n\nPost.propTypes = {\n  post: PropTypes.instanceOf(Object).isRequired,\n  posts: PropTypes.array.isRequired,\n  setPosts: PropTypes.func.isRequired\n};\n\nexport default Post;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles, Container, CssBaseline } from '@material-ui/core';\nimport Post from './Post';\nimport postService from '../services/posts';\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n});\n\nconst PostContainer = () => {\n  const [posts, setPosts] = useState([]);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    postService.getAll().then((result) => setPosts(result.reverse()));\n  }, []);\n\n  return (\n    <Container maxWidth='md' className={classes.container}>\n      <CssBaseline />\n      {posts.map((post) => {\n        return <Post key={post._id} post={post} posts={posts} setPosts={setPosts}/>;\n      })}\n    </Container>\n  );\n};\n\nexport default PostContainer;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  makeStyles,\n  CssBaseline,\n  Container,\n  Link,\n  Typography,\n  Button,\n} from '@material-ui/core';\nimport userService from '../services/users';\n\nconst useStyles = makeStyles({\n  info: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    borderBottom: 'solid black',\n  },\n  followRow: {\n    marginBottom: '1em',\n    display: 'flex',\n  },\n  titleRow: {\n    display: 'flex',\n    margin: '1em 0',\n  },\n  images: {\n    marginTop: '1em',\n  },\n  username: {\n    marginRight: '0.5em',\n  },\n  button: {\n    marginLeft: '0.5em',\n  },\n  following: {\n    marginLeft: '0.5em',\n  },\n  followers: {\n    margin: '0 0.5em',\n  },\n  posts: {\n    marginRight: '0.5em',\n  },\n});\n\nconst Profile = () => {\n  const [user, setUser] = useState(null);\n  const classes = useStyles();\n\n  const name = useParams().username;\n\n  useEffect(() => {\n    userService.findByUsername(name).then((response) => {\n      setUser(response);\n    });\n  }, [name]);\n\n  return (\n    <div>\n      <CssBaseline />\n      {user && (\n        <Container maxWidth='md'>\n          <div className={classes.info}>\n            <div className={classes.titleRow}>\n              <Typography\n                component='h1'\n                variant='h5'\n                className={classes.username}\n              >\n                {user.username}\n              </Typography>\n              <div className={classes.button}>\n                <Button variant='contained' color='primary'>\n                  Follow\n                </Button>\n              </div>\n            </div>\n            <Typography component='div' variant='body1'>\n              <div className={classes.followRow}>\n                <div className={classes.posts}>\n                  {user.posts.length}\n                  &nbsp; posts\n                </div>\n                <Link color='inherit' className={classes.followers}>\n                  {user.followers.length}\n                  &nbsp; followers\n                </Link>\n                <Link color='inherit' className={classes.following}>\n                  {user.following.length}\n                  &nbsp; following\n                </Link>\n              </div>\n            </Typography>\n          </div>\n          <div className={classes.images}>\n            {user.posts.map((post) => (\n              <img\n                src={post.image}\n                alt='Post'\n                key={post._id}\n                width='25%'\n                height='25%'\n              />\n            ))}\n          </div>\n        </Container>\n      )}\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  makeStyles,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  Button,\n  TextField,\n  Container,\n  CssBaseline,\n  Snackbar,\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport postService from '../services/posts';\n\nconst useStyles = makeStyles({\n  content: {\n    margin: '1em',\n  },\n  input: {\n    margin: '1em',\n  },\n});\n\nconst PostForm = ({ visible, setVisible }) => {\n  const [content, setContent] = useState('');\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(false);\n  const [notification, setNotification] = useState(false);\n\n  const classes = useStyles();\n\n  const handleClose = () => {\n    setVisible(false);\n  };\n\n  const setErrorMessage = () => {\n    setError(true);\n    setTimeout(() => {\n      setError(false);\n    }, 3000);\n  };\n\n  const setNotificationMessage = () => {\n    setNotification(true);\n    setTimeout(() => {\n      setNotification(false);\n    }, 3000);\n  };\n\n  const addPost = () => {\n    try {\n      if (content !== '' && file !== null) {\n        const formData = new FormData();\n        formData.append('content', content);\n        formData.append('postImage', file);\n        postService.post(formData);\n        setNotificationMessage();\n        setContent('');\n        setVisible(false);\n      } else {\n        setErrorMessage();\n      }\n    } catch (e) {\n      setErrorMessage();\n    }\n  };\n\n  return (\n    <Container>\n      <Snackbar\n        open={notification}\n        anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\n      >\n        <Alert severity='success' variant='filled'>\n          Post successfully added\n        </Alert>\n      </Snackbar>\n      <CssBaseline />\n      <Dialog open={visible} onClose={handleClose} fullWidth>\n        <Snackbar\n          open={error}\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\n        >\n          <Alert severity='error' variant='filled'>\n            Content or image missing\n          </Alert>\n        </Snackbar>\n        <DialogTitle>Add a new post</DialogTitle>\n        <input\n          className={classes.input}\n          type='file'\n          onChange={({ target }) => setFile(target.files[0])}\n        />\n        <TextField\n          label='Content'\n          variant='outlined'\n          required\n          multiline\n          onChange={({ target }) => setContent(target.value)}\n          className={classes.content}\n        />\n        <DialogActions>\n          <Button variant='contained' onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button variant='contained' color='primary' onClick={addPost}>\n            Add post\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n};\n\nPostForm.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  setVisible: PropTypes.func.isRequired,\n};\n\nexport default PostForm;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  makeStyles,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Menu,\n  MenuItem,\n  Button,\n} from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport PostForm from './PostForm';\n\nconst useStyles = makeStyles({\n  navbar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  postButton: {\n    marginLeft: '5em',\n  },\n});\n\nconst Navbar = () => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [visible, setVisible] = useState(false);\n\n  const open = Boolean(anchorEl);\n\n  const history = useHistory();\n  const classes = useStyles();\n\n  const currentUser = JSON.parse(localStorage.getItem('user'));\n\n  const logOut = () => {\n    localStorage.clear();\n    history.push('/');\n    window.location.reload();\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  return (\n    <AppBar position='sticky'>\n      <Toolbar className={classes.navbar}>\n        <div>\n          <IconButton color='inherit' onClick={() => history.push('/')}>\n            <HomeIcon />\n          </IconButton>\n          <Button\n            className={classes.postButton}\n            onClick={() => setVisible(true)}\n            variant='contained'\n          >\n            New post\n          </Button>\n          <PostForm visible={visible} setVisible={setVisible} />\n        </div>\n        <IconButton color='inherit' onClick={handleMenu}>\n          <AccountCircle />\n        </IconButton>\n        <Menu\n          anchorEl={anchorEl}\n          onClose={() => setAnchorEl(null)}\n          open={open}\n          getContentAnchorEl={null}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          <MenuItem onClick={() => history.push(`/${currentUser.username}`)}>\n            My profile\n          </MenuItem>\n          <MenuItem onClick={logOut}>Log out</MenuItem>\n        </Menu>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n","import React, { useState, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Homepage from './components/Homepage';\nimport PostContainer from './components/PostContainer';\nimport Profile from './components/Profile';\nimport postService from './services/posts';\nimport Navbar from './components/Navbar';\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const loggedUser = localStorage.getItem('user');\n    if (loggedUser) {\n      const parsedUser = JSON.parse(loggedUser);\n      setUser(parsedUser);\n      postService.setToken(parsedUser.token);\n    }\n  }, []);\n\n  return (\n    <Router>\n      {user ? <Navbar /> : null}\n      <Switch>\n        <Route path='/login'>\n          {user ? <Redirect to='/' /> : <Login setUser={setUser} />}\n        </Route>\n        <Route path='/register'>\n          {user ? <Redirect to='/' /> : <Register />}\n        </Route>\n        <Route path='/:username'>\n          <Profile />\n        </Route>\n        <Route path='/'>{user ? <PostContainer /> : <Homepage />}</Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}